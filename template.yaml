# For further info on SAM template, go to: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-template-anatomy.html
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  ts-simple-api-proxy-with-sam

  Sample SAM Template for ts-simple-api-proxy

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 120

Resources:
  TsSimpleApiProxyFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: ./ # This has to be either the local folder where we have package.json or S3 bucket
      Handler: ./dist/main.example # name of the handler function in src/handler.js
      Runtime: nodejs12.x
      Description: Example Lambda Function
      MemorySize: 1024
      Timeout: 15
      Events:
        TsSimpleApiProxy:
          Type: Api # Creates API Gateway. More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            # StageName: prod
            Path: /get-users
            Method: get
      Policies: # Creates IAM Role
        # We can choose from a list of policy templates which are specific to SAM
        # See: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - SSMParameterReadPolicy:
            ParameterName: mock-parameter # For this policy, ParameterName is required

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  TsSimpleApiProxyApi:
    Description: "API Gateway endpoint URL for Prod stage for function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/get-users"
  TsSimpleApiProxyFunction:
    Description: "Lambda Function ARN"
    Value: !GetAtt TsSimpleApiProxyFunction.Arn
  TsSimpleApiProxyFunctionIamRole:
    Description: "Implicit IAM Role created for the function"
    Value: !GetAtt TsSimpleApiProxyFunction.Arn
